@disappear-duration: 1s;
@first-bounce: 14%;
@second-bounce: 10%;
@third-bounce: 6%;

@import "helpers.less";
@import "animations.less";

/* Implementation */
body {
  margin: 0;
  padding: 0;
  background: black;
}

.shiftingtiles {
  height: 900px;
  width: 1440px;
  overflow: hidden;

  .image() {
    background-size: cover;
    background-position: center;
    /* background-image: to be filled in ;*/
  }

  & > .loading {
    display: none;
    position: absolute;
    line-height: 1080px;
    text-align: center;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 100;
    background: black;
    color: white;
  }

  & > .row {
    position: relative;
    width: 200%;
    height: 50%;
    margin: 0 0;

    .single, .dual {
      background: white;
      float: left;
      height: 100%;
      box-sizing: border-box;
      border: 5px solid black;
    }
    .single { 
      width: 20%; 
      .image();
      .transform-origin(0 100%);
    }
    .dual { 
      width: 10%;
      .transform-origin(0 50%);
      > div {
        width: 100%;
        height: 50%;
        box-sizing: border-box;
        border: solid black;
        border-width: 10px 0 0 0;
        .image();
      }
      > div:first-child {
        border-top: 0;
      }
    }

    &:not(:first-child) {
      margin-left: -100%;
      
      .single, .dual {
        float: right;
      }
      .single { .transform-origin(100% 0); }
      .dual { .transform-origin(100% 50%); }
    }
  }
}

.disappear, .disappear + *, .disappear + * + * {
  .animation-fill-mode(forwards);
  .animation-iteration-count(1);
  animation-play-state: running;
  animation-delay: 0s;
}

.single.disappear {
  .animation(disappear-single, @disappear-duration);
  .transform-origin(100% 0);
  .animation-iteration-count(1);
  animation-play-state: running;
  animation-delay: 0s;
}
.dual.disappear {
  .animation(disappear-dual, @disappear-duration);
  .transform-origin(0 50%);
  .animation-iteration-count(1);
  animation-play-state: running;
  animation-delay: 0s;
}

/* Left, first order */
.dual.disappear + .dual, .single.disappear + .single { .animation(bounce-equal-l, @disappear-duration); }
.dual.disappear + .single { .animation(bounce-twice-l, @disappear-duration); }
.single.disappear + .dual { .animation(bounce-halve-l, @disappear-duration); }

/* Left, second order */
.dual.disappear + * + .dual, .single.disappear + * + .single { .animation(bounce-equal-l-small, @disappear-duration); }
.dual.disappear + * + .single { .animation(bounce-twice-l-small, @disappear-duration); }
.single.disappear + * + .dual { .animation(bounce-halve-l-small, @disappear-duration); }

/* Left, third order */
.dual.disappear + * + * + .dual, .single.disappear + * + * + .single { .animation(bounce-equal-l-smallest, @disappear-duration); }
.dual.disappear + * + * + .single { .animation(bounce-twice-l-smallest, @disappear-duration); }
.single.disappear + * + * + .dual { .animation(bounce-halve-l-smallest, @disappear-duration); }

.shiftingtiles .row + .row {
  /* Right, first order */
  .dual.disappear + .dual, .single.disappear + .single { .animation(bounce-equal-r, @disappear-duration); }
  .dual.disappear + .single { .animation(bounce-twice-r, @disappear-duration); }
  .single.disappear + .dual { .animation(bounce-halve-r, @disappear-duration); }

  /* Right, second order */
  .dual.disappear + * + .dual, .single.disappear + * + .single { .animation(bounce-equal-r-small, @disappear-duration); }
  .dual.disappear + * + .single { .animation(bounce-twice-r-small, @disappear-duration); }
  .single.disappear + * + .dual { .animation(bounce-halve-r-small, @disappear-duration); }

  /* Right, third order */
  .dual.disappear + * + * + .dual, .single.disappear + * + * + .single { .animation(bounce-equal-r-small, @disappear-duration); }
  .dual.disappear + * + * + .single { .animation(bounce-twice-r-small, @disappear-duration); }
  .single.disappear + * + * + .dual { .animation(bounce-halve-r-small, @disappear-duration); }
}